name: Manual Changelog Update

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to add to changelog (e.g., 1.0.0)'
        required: true
        type: string
      changes:
        description: 'Changes to add (markdown format)'
        required: true
        type: string
        default: |
          ### Changed
          - Manual changelog update

permissions:
  contents: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          fetch-depth: 0 # zizmor: ignore[artipacked]

      - name: Update CHANGELOG.md
        run: |
          VERSION="$GITHUB_EVENT_INPUTS_VERSION"
          CHANGES="$GITHUB_EVENT_INPUTS_CHANGES"
          RELEASE_DATE=$(date -u +"%Y-%m-%d")

          echo "Updating CHANGELOG.md for version $VERSION"

          # Create new changelog with header
          cat > /tmp/new_changelog.md << 'EOF'
          # Changelog

          All notable changes to this project will be documented in this file.

          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          ## [Unreleased]

          EOF

          # Add new release section
          echo "" >> /tmp/new_changelog.md
          echo "## [$VERSION] - $RELEASE_DATE" >> /tmp/new_changelog.md
          echo "" >> /tmp/new_changelog.md
          echo "$CHANGES" >> /tmp/new_changelog.md
          echo "" >> /tmp/new_changelog.md

          # Add existing releases
          if [ -f CHANGELOG.md ]; then
            RELEASES_START=$(grep -n "^## \[.*\] - " CHANGELOG.md | head -1 | cut -d: -f1)
            if [ -n "$RELEASES_START" ]; then
              tail -n +$RELEASES_START CHANGELOG.md >> /tmp/new_changelog.md
            else
              echo "---" >> /tmp/new_changelog.md
              echo "" >> /tmp/new_changelog.md
              echo "For releases prior to v$VERSION, see the [GitHub Releases page](https://github.com/rknightion/meraki-dashboard-ha/releases)." >> /tmp/new_changelog.md
            fi
          else
            echo "---" >> /tmp/new_changelog.md
            echo "" >> /tmp/new_changelog.md
            echo "For releases prior to v$VERSION, see the [GitHub Releases page](https://github.com/rknightion/meraki-dashboard-ha/releases)." >> /tmp/new_changelog.md
          fi

          mv /tmp/new_changelog.md CHANGELOG.md
          echo "âœ… Updated CHANGELOG.md with version $VERSION"
        env:
          GITHUB_EVENT_INPUTS_VERSION: ${{ github.event.inputs.version }}
          GITHUB_EVENT_INPUTS_CHANGES: ${{ github.event.inputs.changes }}

      - name: Update docs changelog
        run: |
          echo "Updating docs/changelog.md with content from CHANGELOG.md"

          # Create the Jekyll front matter and header for docs changelog
          cat > docs/changelog.md << 'EOF'
          ---
          layout: default
          title: Changelog
          description: Release history and changelog for the Meraki Dashboard Home Assistant Integration
          ---

          # Changelog

          All notable changes to this project are documented here. The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          <div class="alert alert-info" role="alert">
            <i class="bi bi-info-circle me-2"></i>
            <strong>Note:</strong> This changelog is automatically updated from our <a href="{{ site.repository }}/blob/main/CHANGELOG.md">main CHANGELOG.md</a> when releases are published.
          </div>

          EOF

          # Extract the changelog content from CHANGELOG.md (skip the header)
          if [ -f CHANGELOG.md ]; then
            tail -n +7 CHANGELOG.md >> docs/changelog.md
          fi

          # Add footer
          cat >> docs/changelog.md << 'EOF'

          ## Support

          - **Questions**: Check our [FAQ](faq) or see the troubleshooting section on the [main page](/)
          - **Issues**: Report bugs on [GitHub Issues]({{ site.repository }}/issues)
          - **Discussions**: Join the conversation on [GitHub Discussions]({{ site.repository }}/discussions)

          ## Links

          - **[Full Changelog]({{ site.repository }}/blob/main/CHANGELOG.md)** - Complete technical changelog
          - **[Releases]({{ site.repository }}/releases)** - Download specific versions
          - **[Release Notes]({{ site.repository }}/releases)** - Detailed release information
          EOF

          echo "âœ… Updated docs/changelog.md"

      - name: Commit changes
        run: |
          VERSION="$GITHUB_EVENT_INPUTS_VERSION"

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Configure git to use the token for authentication
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          if ! git diff --quiet CHANGELOG.md docs/changelog.md; then
            git add CHANGELOG.md docs/changelog.md
            git commit -m "docs: manual changelog update for version $VERSION" \
                       -m "ðŸ¤– Manually updated CHANGELOG.md and docs/changelog.md"
            git push origin main
            echo "âœ… Committed and pushed changelog updates for version $VERSION"
          else
            echo "No changes to commit"
          fi

        env:
          GITHUB_EVENT_INPUTS_VERSION: ${{ github.event.inputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
