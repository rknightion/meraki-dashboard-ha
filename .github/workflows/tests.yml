name: Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.13"

jobs:
  # Run all linting, formatting, and static analysis checks via pre-commit
  lint-and-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    runs-on: ubuntu-latest
    name: Linting and Formatting
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          activate-environment: true
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run Ruff linting
        run: uv run ruff check --fix custom_components tests

      - name: Run Ruff formatting
        run: uv run ruff format custom_components tests

  # Check with Home Assistant's hassfest
  hassfest:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    name: Hassfest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run hassfest
        uses: home-assistant/actions/hassfest@a19f5f4e08ef2786e4604a948f62addd937a6bc9 # master

  # Validate HACS compliance
  hacs:
    runs-on: ubuntu-latest
    name: HACS
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: HACS validation
        uses: hacs/action@285e417a83cc9c6a99806236b7f22414c209ef10 # main
        with:
          category: integration

  # Test the integration
  pytest:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          activate-environment: true
          enable-cache: true

      - name: Install dependencies
        run: |
          # Install dependencies with all extras
          uv sync --all-extras
          # Verify installation
          uv pip list

      - name: Verify Python environment
        run: |
          uv run python --version
          uv run python -c "import sys; print('Python executable:', sys.executable)"
          uv run python -c "from homeassistant.const import __version__; print('Home Assistant version:', __version__)"

      - name: Create Home Assistant config directory
        run: mkdir -p /tmp/homeassistant

      - name: Run tests with coverage
        env:
          # Set Python path to include the workspace
          PYTHONPATH: ${{ github.workspace }}
          # Ensure UTF-8 encoding for tests
          PYTHONIOENCODING: utf-8
          # Set timezone to avoid any timezone-related test issues
          TZ: UTC
          # Disable Home Assistant analytics
          HA_DISABLE_ANALYTICS: true
          # Set Home Assistant configuration directory
          HOMEASSISTANT_CONFIG_DIR: /tmp/homeassistant
          # Ensure proper locale
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
        run: |
          # Run tests using uv environment
          uv run python -m pytest tests/ \
            --cov=custom_components.meraki_dashboard \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html \
            --cov-fail-under=10 \
            --tb=short \
            -v

      # Coverage reports are generated locally (see htmlcov/ directory)
      # Uncomment below to upload to Codecov (requires CODECOV_TOKEN secret)
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # All checks must pass
  all-checks-pass:
    runs-on: ubuntu-latest
    name: All Checks Pass
    if: success() # Only run this job if all dependencies succeed
    needs:
      - lint-and-scan
      - pytest
      - hassfest
      - hacs
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: All checks passed
        run: echo "âœ… All checks passed!"
