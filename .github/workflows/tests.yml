name: Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.13"

jobs:
  # Run all linting, formatting, and static analysis checks via pre-commit
  lint-and-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    runs-on: ubuntu-latest
    name: Linting and Formatting
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          activate-environment: true
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run Ruff linting
        run: uv run ruff check --fix custom_components

      - name: Run Ruff formatting
        run: uv run ruff format custom_components

  # Test the integration
  pytest:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          activate-environment: true
          enable-cache: true

      - name: Install dependencies
        run: |
          # Install dependencies with all extras
          uv sync --all-extras
          # Verify installation
          uv pip list

      - name: Verify Python environment
        run: |
          uv run python --version
          uv run python -c "import sys; print('Python executable:', sys.executable)"
          uv run python -c "from homeassistant.const import __version__; print('Home Assistant version:', __version__)"

      - name: Create Home Assistant config directory
        run: mkdir -p /tmp/homeassistant

      - name: Run tests with coverage
        env:
          # Set Python path to include the workspace
          PYTHONPATH: ${{ github.workspace }}
          # Ensure UTF-8 encoding for tests
          PYTHONIOENCODING: utf-8
          # Set timezone to avoid any timezone-related test issues
          TZ: UTC
          # Disable Home Assistant analytics
          HA_DISABLE_ANALYTICS: true
          # Set Home Assistant configuration directory
          HOMEASSISTANT_CONFIG_DIR: /tmp/homeassistant
          # Ensure proper locale
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
        run: |
          # Run tests using uv environment
          uv run python -m pytest tests/ \
            --cov=custom_components.meraki_dashboard \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html \
            --cov-fail-under=10 \
            --tb=short \
            -v

      # Coverage reports are generated locally (see htmlcov/ directory)
      # Uncomment below to upload to Codecov (requires CODECOV_TOKEN secret)
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  all-checks-pass:
    runs-on: ubuntu-latest
    name: All Checks Pass
    if: success() # Only run this job if all dependencies succeed
    needs:
      - lint-and-scan
      - pytest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: All checks passed
        run: echo "âœ… All checks passed!"
